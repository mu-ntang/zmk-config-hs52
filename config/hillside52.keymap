/*
 * Copyright (c) 2021-2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define QWERTY_L 0
#define DVORAK_L 1
#define COLEMK_L 2
#define NAV_L    3
#define SYM_L    4
#define ADJ_L    5
#define Undo   LC(Z)
#define Cut    LC(X)
#define Copy   LC(C)
#define Paste  LC(V)
#define Redo   LC(Y)

/ {
    behaviors {
        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 30 38 39 40 41 42 43 44 45 46 47 48 31>;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 31 32 33 34 35 36 37 44 45 46 47 48 49 50 51 41 42 43 30>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            /* QWERTY
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | `     |   Q   |   W   |   E   |   R   |   T   |-----------------------------------|   Y   |   U   |   I   |   O   |   P   | BKSPC |
 * | TAB   |   A   |   S   |   D   |   F   |   G   |-----------------------------------|   H   |   J   |   K   |   L   |   ;   | ENTER |
 * | SHIFT |   Z   |   X   |   C   |   V   |   B   |   '   |-------------------|   /   |   N   |   M   |   ,   |   .   |  Up   | SHIFT |
 * | Mute  |  ESC  | CTRL  |-------|  GUI  |  ALT  |SK SHFT|  Nav  |---|  Sym  | SPACE |  ALT  |  GUI  |-------| Left  | Down  | Right |
 */

            bindings = <
&mt ESCAPE TAB    &kp Q              &kp W              &kp E  &kp R         &kp T                                                 &kp Y     &kp U  &kp I      &kp O     &kp P                       &kp BSPC
&lt 2 GRAVE       &HML LEFT_SHIFT A  &kp S              &kp D  &kp F         &kp G                                                 &kp H     &kp J  &kp K      &kp L     &HMR RIGHT_SHIFT SEMICOLON  &kp ENTER
&kp LSHFT         &kp Z              &kp X              &kp C  &kp V         &kp B             &kp SQT                  &kp SLASH  &kp N     &kp M  &kp COMMA  &kp DOT   &kp UP                      &to 4
&kp LEFT_CONTROL  &sl 5              &kp LC(BACKSLASH)         &kp LEFT_ALT  &kp LEFT_COMMAND  &kp SPACE  &sl 1  &mo 2  &kp ENTER  &kp LALT  &mo 3             &kp LEFT  &kp DOWN                    &kp RIGHT
            >;
        };

        sym_layer {
            /* SYM
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | INS   |   !   |   @   |   #   |   $   |   %   |-----------------------------------|   ^   |   &   |   *   |   (   |   )   | DELETE|
 * | CAPS  |   \   |   -   |   =   |   [   |   ]   |-----------------------------------| Vol+  | Shift | Ctrl  | Alt   | Gui   | ENTER |
 * | Shift |   |   |   _   |   +   |   {   |   }   | Play  |-------------------| Mute  | Vol-  |  N0   |  N1   |  N2   |       | SHIFT |
 * |       |       |       |-------|       |       |       |  ADJ_L |---|      |       |       |       |-------| CTRL  | MENU  |SkAltGr|
 */

            bindings = <
&kp INS     &kp EXCL  &kp AT     &kp HASH   &kp DOLLAR  &kp PERCENT                                       &kp CARET     &kp AMPS   &kp ASTRK  &kp LPAR   &kp RPAR   &kp DEL
&caps_word  &kp BSLH  &kp MINUS  &kp EQUAL  &kp LBKT    &kp RBKT                                          &kp C_VOL_UP  &kp RSHFT  &kp RCTRL  &kp LALT   &kp RGUI   &trans
&trans      &kp PIPE  &kp UNDER  &kp PLUS   &kp LBRC    &kp RBRC     &kp C_PP                 &kp C_MUTE  &kp C_VOL_DN  &kp N0     &kp N1     &kp N2     &none      &trans
&none       &none     &trans                &tog 0      &trans       &tog 0    &mo 1  &trans  &trans      &trans        &trans                &kp RCTRL  &kp K_APP  &sk RALT
            >;
        };

        numpad {
            bindings = <
&none  &none  &none  &none  &none  &none                                      &none         &kp N7  &kp N8  &kp N9  &none  &kp BACKSPACE
&none  &none  &none  &none  &none  &none                                      &none         &kp N4  &kp N5  &kp N6  &none  &none
&none  &none  &none  &none  &none  &none  &none                    &none      &none         &kp N1  &kp N2  &kp N3  &none  &none
&none  &none  &none         &none  &none  &kp SPACE  &none  &none  &kp ENTER  &kp NUMBER_0  &none           &none   &none  &none
            >;
        };

        adj_layer {
            /* ADJUST
 * -------------------------------------------------------------------------------------------------------------------------------------
 * |       | QWERTY| DVORAK| COLEMK|       |       |-----------------------------------|       |Prt Scr|       | EP_OFF| EP_ON |       |
 * |       | BT 0  | BT 1  | BT 2  | BT 3  | BT 4  |-----------------------------------|       |       |       |       |       |       |
 * | BOOTL | RESET |       |OUT_USB|OUT_BLE|       |BT CLR |-------------------|       |       |       |       |       |       | SHIFT |
 * ----------------|       |-------|       |       |       |       |---|       |       |       |       |-------| CTRL  |----------------
 */

            bindings = <
&none        &to 0         &to 0         &to 0         &none         &none                                             &none   &kp PRINTSCREEN  &none  &ext_power EP_OFF  &ext_power EP_ON  &none
&none        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                      &none   &none            &none  &none              &none             &none
&bootloader  &sys_reset    &none         &out OUT_USB  &out OUT_BLE  &none         &bt BT_CLR                  &none   &none   &none            &none  &none              &none             &trans
&bootloader  &none         &trans                      &trans        &trans        &trans      &trans  &trans  &trans  &trans  &trans                  &kp RCTRL          &none             &bootloader
            >;
        };

        mousemvmt {
            bindings = <
&none  &none  &none           &mmv MOVE_UP    &none            &none                                    &none  &none           &mmv MOVE_UP    &none              &none              &none
&none  &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none                                    &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT    &none              &none
&none  &none  &none           &none           &none            &none  &none                   &none     &none  &none           &none           &none              &mmv MOVE_Y(-500)  &to 0
&none  &none  &none                           &none            &none  &mkp MB1  &none  &none  &mkp MB2  &none  &none                           &mmv MOVE_X(-500)  &mmv MOVE_Y(500)   &mmv MOVE_X(500)
            >;
        };

        sticky_layer {
            bindings = <
&none  &none  &none  &kp LA(LS(NUMBER_3))  &kp LA(LS(NUMBER_4))  &kp LA(LS(N5))                              &none  &none  &none  &none  &none  &none
&none  &none  &none  &none                 &none                 &none                                       &none  &none  &none  &none  &none  &none
&none  &none  &none  &none                 &none                 &none           &none                &none  &none  &none  &none  &none  &none  &none
&none  &none  &none                        &none                 &none           &none  &none  &none  &none  &none  &none         &none  &none  &none
            >;
        };
    };
};
